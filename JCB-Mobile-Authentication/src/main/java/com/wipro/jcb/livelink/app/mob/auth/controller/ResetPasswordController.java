package com.wipro.jcb.livelink.app.mob.auth.controller;

import com.wipro.jcb.livelink.app.mob.auth.dto.LoginRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.wipro.jcb.livelink.app.mob.auth.repo.UserRepository;
import com.wipro.jcb.livelink.app.mob.auth.service.ResetPasswordService;

@RestController
@RequestMapping("/auth/mob")
public class ResetPasswordController {

    private static final Logger log = LoggerFactory.getLogger(ResetPasswordController.class);

    @Autowired
    private ResetPasswordService passwordService;
    
    @Autowired
    private UserRepository userRepository;

    @PostMapping("/resetPassword")
    public String processResetPassword(@RequestBody LoginRequest changePwdReq) {
        try {
            String userName = changePwdReq.getUserName(); // Extract userName from request object
            String isUserNameExists = userRepository.checkIfUserNameExists(userName);
            if (isUserNameExists != null) {
                String autoGeneratedPassword = passwordService.generatePassword();
                log.info("Password is before sending to DB: {}", autoGeneratedPassword);
                passwordService.updateResetPassword(autoGeneratedPassword, userName);
                //smsService.sendPassword(autoGeneratedPassword, mobileNumber);
                return "Password Reset have been done Successfully for UserID:-" + userName;
            } else {
                return "Please Provide Valid Login Credentials.";
            }
        } catch (Exception e) {
            log.error("Error resetting password: {}", e.getMessage(), e);
            return "Failed to update password. Please try again.";
        }
    }

}
