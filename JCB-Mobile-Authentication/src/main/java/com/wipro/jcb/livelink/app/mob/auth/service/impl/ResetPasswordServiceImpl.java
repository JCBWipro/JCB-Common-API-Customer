package com.wipro.jcb.livelink.app.mob.auth.service.impl;

import com.wipro.jcb.livelink.app.mob.auth.exception.PasswordUpdateException;
import com.wipro.jcb.livelink.app.mob.auth.model.MsgResponseTemplate;
import com.wipro.jcb.livelink.app.mob.auth.model.SMSTemplate;
import com.wipro.jcb.livelink.app.mob.auth.repo.UserRepository;
import com.wipro.jcb.livelink.app.mob.auth.service.ResetPasswordService;
import com.wipro.jcb.livelink.app.mob.auth.service.UnicelSmsService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Collections;

/**
 * Author: Rituraj Azad
 * User: RI20474447
 * Date:23-07-2024
 * project: JCB-New-Common-API
 */
@Service
public class ResetPasswordServiceImpl extends ResetPasswordService {

    private static final Logger log = LoggerFactory.getLogger(ResetPasswordServiceImpl.class);
    @Autowired
    private UserRepository userRepository;

    @Autowired
    private UnicelSmsService unicelSmsService;

    public MsgResponseTemplate resetPassword(String userName) {
        try {
            if (userName.isEmpty()) {
                return new MsgResponseTemplate("Invalid username provided.", false);
            }

            String mobileNumber = userRepository.findMobileNumberByUserID(userName);
            if (mobileNumber == null) {
                return new MsgResponseTemplate("User not found.", false);
            }

            // Check password reset attempts
            int attempts = userRepository.resetPasswordGetAttempts(userName);
            if (attempts >= 5) {
                return new MsgResponseTemplate("Maximum attempts reached for resetting the password.", false);
            }

            String autoGeneratedPassword = generatePassword();
            log.info("Password is before sending to DB: {}", autoGeneratedPassword);

            // Update password in the database first
            resetPassword(autoGeneratedPassword, userName);

            // Prepare SMS template
            SMSTemplate smsTemplate = new SMSTemplate();
            smsTemplate.setTo(Collections.singletonList(mobileNumber));
            String body = "Your new password registered with JCB LiveLink is " + autoGeneratedPassword +
                    " . JCB LiveLink Team.; Dt:";
            smsTemplate.setMsgBody(Collections.singletonList(body));

            //SMS Send
            unicelSmsService.sendSms(smsTemplate);

            // Increment password reset attempts
            userRepository.resetPasswordIncrementAttempts(userName);

            return new MsgResponseTemplate("Password Generated and Sent to mobile Number : " + mobileNumber, true);

        } catch (PasswordUpdateException e) {
            log.error("Error resetting password: {}", e.getMessage(), e);
            return new MsgResponseTemplate("Failed to update password. Please check the mobile number and try again.", false);

        } catch (Exception e) {
            log.error("Error resetting password: {}", e.getMessage(), e);
            return new MsgResponseTemplate("An unexpected error occurred. Please try again later.", false);
        }
    }
}
